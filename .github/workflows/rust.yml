name: Test and Build Rust

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  rustfmt:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          components: rustfmt
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
      - run: cargo fmt --check --verbose

  clippy:
    name: Clippy ${{ matrix.toolchain }}
    runs-on: ubuntu-latest
    continue-on-error: ${{ (matrix.toolchain == 'beta') || (matrix.toolchain == 'nightly') }}
    strategy:
      fail-fast: false
      matrix:
        toolchain:
          - stable
          - beta
          - nightly
    env:
      RUSTFLAGS: --deny warnings
    steps:
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.toolchain }}
          components: clippy
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
      - run: cargo fetch --locked
      - run: cargo clippy --offline --all-features --all-targets
      - run: cargo doc --offline --all-features --no-deps

  msrv:
    name: Check MSRV
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: taiki-e/install-action@cargo-hack
    - uses: Swatinem/rust-cache@v2

    - run: cargo fetch --locked

    - run: cargo hack --feature-powerset --no-dev-deps --rust-version check --workspace

  features:
    name: Features ${{ matrix.toolchain }} ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        toolchain:
          - stable
          - beta
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
    env:
      RUSTFLAGS: --allow unknown-lints --deny warnings
    steps:
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.toolchain }}

      - uses: taiki-e/install-action@cargo-hack

      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2

      - run: cargo fetch --locked

      - name: Check all targets
        run: cargo hack --keep-going --feature-powerset check --all-targets --offline

      - name: Check without dev dependencies
        run: cargo hack --keep-going --feature-powerset --no-dev-deps check --offline

  test:
    name: Test ${{ matrix.toolchain }} ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.toolchain == 'nightly' }}
    strategy:
      fail-fast: false
      matrix:
        toolchain:
          - stable
          - beta
          - nightly
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
    env:
      RUSTFLAGS: --allow unknown-lints --deny warnings
    steps:
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.toolchain }}
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
      - run: cargo fetch --locked
      - run: cargo build --offline --all-features --all-targets
      - run: cargo test --offline --all-features
